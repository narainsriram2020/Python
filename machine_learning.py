# -*- coding: utf-8 -*-
"""Machine Learning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13mnS58RnSmSqcKJpPaQSTg-1tEkHHE5n
"""

import numpy

speed = [93, 87, 62, 99, 78, 89, 96, 95, 98, 61]

x = numpy.mean(speed)

print(x)

#scatterplot

import matplotlib.pyplot as plt

x = [4,6,8,5,2,13,2,12,4,11,14,9,6]
y = [99,86,87,88,111,86,103,87,94,78,77,85,86]

plt.scatter(x, y)
plt.show()

#With Line of best fit

import matplotlib.pyplot as plt
from scipy import stats

x = [9,7,10,8,2,17,2,9,3,11,11,10,6]
y = [99,87,85,81,118,84,100,87,92,78,74,89,86]

slope, intercept, r, p, std_err = stats.linregress(x, y)

def myfunc(x):
  return slope * x + intercept

mymodel = list(map(myfunc, x))

plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

#Polynomial

x = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]
y = [100, 95,92,90,87,83,79,70,60,55,45,40,30,10,50,30,39,55,70,99,100]

mymodel = numpy.poly1d(numpy.polyfit(x, y, 3))
myline = numpy.linspace(1, 25, 200)

plt.scatter(x, y)
plt.plot(myline, mymodel(myline))
plt.show()

#SCALE

import pandas
from sklearn import linear_model
from sklearn.preprocessing import StandardScaler
scale = StandardScaler()
df = pandas.read_csv("NASCAR Champion History Dataset.csv")
X = df[['Year', 'Car Number']]
scaledX = scale.fit_transform(X)
print(scaledX)

X = df[['Year', 'Car Number']]
y = df['Wins']
scaledX = scale.fit_transform(X)
regr = linear_model.LinearRegression()
regr.fit(scaledX, y)
scaled = scale.transform([[2015, 18]])
predictedWins = regr.predict([scaled[0]])
print(predictedWins)

#Decision Tree

import pandas as pd

df = pd.read_csv("california_housing_train.csv")

df

df.info()

import matplotlib.pyplot as plt
import seaborn as sns

df['longitude']

df['energy'].mean()

df['energy'].count()

sns.distplot(df['longitude'])

df1  = df[df['target'] == 1]['energy']
df2  = df[df['target'] == 0]['energy']

df1

df2

sns.distplot(df1)
sns.distplot(df2)

df1  = df[df['target'] == 1]['tempo']
df2  = df[df['target'] == 0]['tempo']
sns.distplot(df1)
sns.distplot(df2)

df1  = df[df['target'] == 1]['speechiness']
df2  = df[df['target'] == 0]['speechiness']
sns.distplot(df1)
sns.distplot(df2)

from sklearn.tree import DecisionTreeClassifier

features = ['longitude', 'latitude', 'total_rooms', 'total_bedrooms']
Xtrain = df[features]
Ytrain = df['longitude']

import pandas
from sklearn import tree
import pydotplus
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt
import matplotlib.image as pltimg

df = pandas.read_csv("california_housing_train.csv")

features = ['longitude', 'latitude', 'total_rooms']
Xtrain = df[features]
Ytrain = df['total_bedrooms']
dtree = DecisionTreeClassifier()
dtree = dtree.fit(Xtrain, Ytrain)
data = tree.export_graphviz(dtree, out_file=None, feature_names=features)
graph = pydotplus.graph_from_dot_data(data)
graph.write_png('mydecisiontree.png')

img=pltimg.imread('mydecisiontree.png')
imgplot = plt.imshow(img)
plt.show()